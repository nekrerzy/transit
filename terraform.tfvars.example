# Example terraform.tfvars file
# Copy this to terraform.tfvars and customize for your environment

subscription_id                   = "b65e6929-28d1-4b59-88f3-570a0df91662"
private_endpoint_subnet_id        = "/subscriptions/b65e6929-28d1-4b59-88f3-570a0df91662/resourceGroups/rg-network-dev-incp-uaen-001/providers/Microsoft.Network/virtualNetworks/vnet-bain-dev-incp-uaen-001/subnets/SNET-PE"
virtual_network_id                = "/subscriptions/b65e6929-28d1-4b59-88f3-570a0df91662/resourceGroups/rg-network-dev-incp-uaen-001/providers/Microsoft.Network/virtualNetworks/vnet-bain-dev-incp-uaen-001"
postgres_subnet_cidr              = "172.20.161.0/28"
postgresql_private_dns_zone_id    = "/subscriptions/b65e6929-28d1-4b59-88f3-570a0df91662/resourceGroups/rg-network-dev-incp-uaen-001/providers/Microsoft.Network/privateDnsZones/psql-bain-dev-incp-uaen-001.private.postgres.database.azure.com"
# postgresql_admin_password auto-generated as random 24-character password

# AKS Configuration  
# aks_private_dns_zone_id     = "System"  # Default: Let AKS manage the private DNS zone automatically
log_analytics_workspace_id    = "/subscriptions/b65e6929-28d1-4b59-88f3-570a0df91662/resourceGroups/rg-monitor-dev-incp-uaen-001/providers/Microsoft.OperationalInsights/workspaces/log-bain-dev-incp-uaen-001"
aks_subnet_id                 = "/subscriptions/b65e6929-28d1-4b59-88f3-570a0df91662/resourceGroups/rg-network-dev-incp-uaen-001/providers/Microsoft.Network/virtualNetworks/vnet-bain-dev-incp-uaen-001/subnets/SNET-AKS"
component                         = "app"
environment                       = "dev"
region                            = "uaen" 
sequence                          = "002"
location                          = "UAE North"

common_tags = {
  Environment  = "dev"
  Project      = "bain"
  ManagedBy    = "terraform"
  CostCenter   = "IT"
  Sovereignty  = "Confidential"
}

# Storage accounts configuration - customize as needed
# storage_accounts = {
#   general = {
#     purpose   = "General application storage"
#     data_type = "Application"
#   }
#   ragdata = {
#     purpose   = "RAG data and embeddings storage"
#     data_type = "AI/ML"
#   }
#   logs = {
#     purpose   = "Application logs and diagnostics"
#     data_type = "Logs"
#   }
#   backup = {
#     purpose   = "Database and application backups"
#     data_type = "Backup"
#   }
# }

# Key Vaults configuration - customize as needed
# key_vaults = {
#   app-secrets = {
#     purpose                 = "Application secrets and configurations"
#     sku_name               = "premium"
#     create_application_key = false
#   }
#   ai-keys = {
#     purpose                 = "AI/ML model keys and tokens"
#     sku_name               = "premium"
#     create_application_key = false
#   }
#   certificates = {
#     purpose                 = "SSL certificates and PKI"
#     sku_name               = "premium"
#     create_application_key = false
#   }
#   devops = {
#     purpose                 = "CI/CD and infrastructure secrets"
#     sku_name               = "standard"
#     create_application_key = true
#   }
# }